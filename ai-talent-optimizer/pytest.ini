[pytest]
# Pytest configuration file

# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test directories
testpaths = tests

# Output options
addopts = 
    -v
    --strict-markers
    --tb=short
    --cov=.
    --cov-report=html
    --cov-report=term-missing
    --cov-report=xml
    --cov-fail-under=70
    --maxfail=3
    --ff

# Markers for test categorization
markers =
    unit: Unit tests (fast, isolated)
    integration: Integration tests (may require external services)
    email: Email functionality tests
    database: Database operation tests
    api: API integration tests
    slow: Slow running tests
    critical: Critical functionality that must pass

# Coverage configuration
[coverage:run]
source = .
omit = 
    */tests/*
    */test_*.py
    test*.py
    *test.py
    *test*.py
    */__pycache__/*
    */venv/*
    */google-env/*
    setup.py
    comprehensive_test.py
    fix_env_loading.py
    memory_persistence_test.py
    memory_workaround_implementation.py
    minimal_ollama_test.py
    mirador_idea_logger.py
    mirador_memory_manager.py
    ollama_context_testing_framework.py
    quick_memory_test.py
    quick_model_compare.py
    quick_ollama_test.py
    run_batch_apply.py
    test_automated_apply.py
    test_gmail_auth.py
    */utils/*
    *.sh
    conftest.py
    pytest.ini

[coverage:report]
exclude_lines =
    pragma: no cover
    def __repr__
    raise AssertionError
    raise NotImplementedError
    if __name__ == .__main__.:
    if TYPE_CHECKING:
    @abstract

[coverage:html]
directory = htmlcov